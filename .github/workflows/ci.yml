name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

jobs:
  quality-and-tests:
    name: PHP ${{ matrix.php }} + Laravel ${{ matrix.laravel }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php: [ '8.2', '8.3', '8.4' ]
        laravel: [ '9.*', '10.*', '11.*', '12.*' ]
        include:
          # PHP >= 8.2 can use current dev constraints
          - php: '8.2'
            laravel: '9.*'
            testbench: '^8.0'
            phpunit: '^10.5'
          - php: '8.2'
            laravel: '10.*'
            testbench: '^8.0'
            phpunit: '^10.5'
          - php: '8.2'
            laravel: '11.*'
            testbench: '^9.0'
            phpunit: '^10.5'
          - php: '8.2'
            laravel: '12.*'
            testbench: '^10.0'
            phpunit: '^10.5'
          - php: '8.3'
            laravel: '9.*'
            testbench: '^9.0'
            phpunit: '^12'
          - php: '8.3'
            laravel: '10.*'
            testbench: '^10.0'
            phpunit: '^12'
          - php: '8.3'
            laravel: '11.*'
            testbench: '^10.0'
            phpunit: '^12'
          - php: '8.3'
            laravel: '12.*'
            testbench: '^11.0'
            phpunit: '^12'
          - php: '8.4'
            laravel: '9.*'
            testbench: '^9.0'
            phpunit: '^12'
          - php: '8.4'
            laravel: '10.*'
            testbench: '^10.0'
            phpunit: '^12'
          - php: '8.4'
            laravel: '11.*'
            testbench: '^10.0'
            phpunit: '^12'
          - php: '8.4'
            laravel: '12.*'
            testbench: '^11.0'
            phpunit: '^12'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          coverage: none
          tools: composer:v2
          extensions: mbstring, intl, json, dom, curl

      - name: Get Composer cache directory
        id: composer-cache
        run: |
          echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

      - name: Cache Composer dependencies
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ matrix.php }}-${{ matrix.laravel }}-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-${{ matrix.php }}-${{ matrix.laravel }}-
            ${{ runner.os }}-composer-

      - name: Configure dependencies for matrix
        run: |
          composer require --no-interaction --no-update "laravel/framework:${{ matrix.laravel }}"
          if [[ -n "${{ matrix.testbench }}" ]]; then composer require --dev --no-interaction --no-update "orchestra/testbench:${{ matrix.testbench }}"; fi
          if [[ -n "${{ matrix.phpunit }}" ]]; then composer require --dev --no-interaction --no-update "phpunit/phpunit:${{ matrix.phpunit }}"; fi

      - name: Install dependencies
        run: composer update --prefer-dist --no-interaction --no-progress --ansi

      - name: Validate composer
        run: composer validate --ansi

      - name: PHP CS Fixer (dry-run)
        run: vendor/bin/php-cs-fixer --version && vendor/bin/php-cs-fixer fix --dry-run --diff --ansi

      - name: Rector (dry-run)
        run: vendor/bin/rector --version && vendor/bin/rector process --dry-run --ansi

      - name: PHPStan
        run: vendor/bin/phpstan --version && vendor/bin/phpstan analyse --no-progress --ansi

      - name: PHPUnit
        run: |
          vendor/bin/phpunit --version
          vendor/bin/phpunit --testdox --colors=always
